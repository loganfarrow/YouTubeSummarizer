const mongoose = require('mongoose')


/*
    Schmema for Option Objects
    Options object represents the settings the user has picked to generate a summary (values of options decide the prompts used)

*/

const optionsSchema = new mongoose.Schema({
    length: {
        type: String,
        enum: ['tiny', 'short', 'medium', 'long', 'xlong'],
        required: true
    },
    tone: {
        type: String,
        enum: ['standard', 'professional', 'academic', 'casual', 'einstein', 'redneck', 'dog'],
        required: true,
        default: 'standard'
    },
    targetAge: {
        type: String,
        enum: ['unspecified', 'five year old', 'teenager', 'college student', 'adult'],
        required: true,
        default: 'unspecified'
    },
    bulletPoints: {
        type: Boolean,
        required: true,
        default: false
    },
    paragraphLimit: Number,
    wordLimit: Number,
    bulletPointLimit: Number,
    _id: { // if we allow this field to be autogenerated, it won't be a string and querying could be difficult
        type: String,
        default: new mongoose.mongo.ObjectId().toString()
    },
})

let optionsModel = mongoose.model('Summary', optionsSchema)

module.exports = optionsModel